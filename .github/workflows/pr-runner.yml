name: Run on Self-Hosted Runner (Push to Master)

on:
  push:
    branches:
      - main

concurrency:
  group: test-push-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run-on-self-hosted:
    runs-on: [self-hosted, Windows, X64]
    env:
      GITHUB_TOKEN: ${{ secrets.WORKSTATION_KEY3 }}   # âœ… Set it here

    steps:
      - name: Setup environment
        id: set-env
        shell: cmd
        run: |
          @echo off
          echo --- Setting up shared environment variables ---
          for /f "delims=" %%i in ('python "%WORKSPACE_PATH%\local-scripts-do_not_delete\resolve_paths.py" ASI_APP_REPO_PATH') do (
            echo ASI_APP_PATH=%%i>> "%GITHUB_ENV%"
          )
          for /f "delims=" %%i in ('python "%WORKSPACE_PATH%\local-scripts-do_not_delete\resolve_paths.py" GITHUB_ACTIONS_SCRIPTS_PATH') do (
            echo ACTIONS_PATH=%%i>> "%GITHUB_ENV%"
          )

      - name: Check requirements
        id: check-reqs
        if: steps.set-env.conclusion == 'success'
        shell: cmd
        run: |
          @echo off
          cd /d "%ASI_APP_PATH%"
          call "%ACTIONS_PATH%\Check_requirements.bat"

      # =================================================================
      # 2. PIPELINE STAGES (ALL) 
      # =================================================================
      - name: Pipeline - Prebuild (Setup)
        if: steps.set-env.conclusion == 'success'
        shell: cmd
        run: |
          @echo off
          setlocal EnableDelayedExpansion
          set PIPELINE_STAGE=setup
          call "%ACTIONS_PATH%\Pipeline.bat" Automated_master_checks

      - name: Pipeline - Prebuild (Handle PFCs)
        if: steps.set-env.conclusion == 'success'
        shell: cmd
        run: |
          @echo off
          set PIPELINE_STAGE=prebuild-handle_pfcs
          call "%ACTIONS_PATH%\Pipeline.bat" Automated_master_checks

      - name: Pipeline - Prebuild (Static Analysis GL)
        if: steps.set-env.conclusion == 'success'
        shell: cmd
        run: |
          @echo off
          set PIPELINE_STAGE=prebuild-static_analysis_gl
          call "%ACTIONS_PATH%\Pipeline.bat" Automated_master_checks

      - name: Pipeline - Prebuild (File Management)
        if: steps.set-env.conclusion == 'success'
        shell: cmd
        run: |
          @echo off
          set PIPELINE_STAGE=prebuild-file_management
          call "%ACTIONS_PATH%\Pipeline.bat" Automated_master_checks

      - name: Pipeline - Prebuild (PFC Ordering)
        if: steps.set-env.conclusion == 'success'
        shell: cmd
        run: |
          @echo off
          set PIPELINE_STAGE=prebuild-pfc_ordering
          call "%ACTIONS_PATH%\Pipeline.bat" Automated_master_checks

      - name: Pipeline - Prebuild (CPP Check)
        if: steps.set-env.conclusion == 'success'
        shell: cmd
        run: |
          @echo off
          set PIPELINE_STAGE=prebuild-cpp_check
          call "%ACTIONS_PATH%\Pipeline.bat" Automated_master_checks

      - name: Pipeline - Prebuild (Target Auto Add)
        if: steps.set-env.conclusion == 'success'
        shell: cmd
        run: |
          @echo off
          set PIPELINE_STAGE=prebuild-target_auto_add
          call "%ACTIONS_PATH%\Pipeline.bat" Automated_master_checks

      - name: Pipeline - Compiler License Check
        if: steps.set-env.conclusion == 'success'
        shell: cmd
        run: |
          @echo off
          set PIPELINE_STAGE=compiler-licence-check
          call "%ACTIONS_PATH%\Pipeline.bat" Automated_master_checks

      - name: Pipeline - Build
        if: steps.set-env.conclusion == 'success'
        shell: cmd
        run: |
          @echo off
          set PIPELINE_STAGE=build
          call "%ACTIONS_PATH%\Pipeline.bat" Automated_master_checks

      - name: Pipeline - Post Build & Final Report
        if: always()
        shell: cmd
        run: |
          @echo off
          set PIPELINE_STAGE=post-build
          call "%ACTIONS_PATH%\Pipeline.bat" Automated_master_checks

      # =================================================================
      # 3. FINAL LOG COPY
      # =================================================================
      - name: Copy Build Result to Actions Script Folder
        if: always()
        shell: cmd
        run: |
          @echo off
          set "SOURCE_FILE=%ASI_APP_PATH%\project\Build_Final_result.txt"
          set "DEST_FILE=%ACTIONS_PATH%\Build_Final_result.txt"
          if exist "%SOURCE_FILE%" (
            echo Found result file. Copying...
            copy /Y "%SOURCE_FILE%" "%DEST_FILE%"
          ) else (
            echo Build result file not found.
          )
